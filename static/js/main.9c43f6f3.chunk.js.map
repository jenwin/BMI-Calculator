{"version":3,"sources":["components/Height.js","components/Weight.js","components/UserResults.js","components/BmiNumber.js","components/BmiButton.js","components/Footer.js","App.js","index.js"],"names":["Height","this","props","heightFeet","heightInches","handleBmi","Form","Label","htmlFor","tabIndex","Control","id","type","name","placeholder","autoComplete","value","onChange","aria-label","Component","Weight","weightPounds","UserResults","getBmi","className","BmiNumber","BmiButton","handleResults","disabled","Button","onClick","size","Footer","App","e","preventDefault","target","setState","state","addAllHeight","Number","totalBMI","Math","pow","toFixed","results","handleKeyDown","keyCode","bind","onSubmit","onKeyDown","Group","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9c43f6f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Height extends Component {\r\n  render() {\r\n    const { heightFeet, heightInches, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Form.Label\r\n          htmlFor=\"height-feet\"\r\n          tabIndex=\"0\">\r\n            Height\r\n        </Form.Label>\r\n        { /*height in feet*/ }\r\n        <Form.Control\r\n          id=\"height-feet\"\r\n          type=\"number\"\r\n          name=\"heightFeet\"\r\n          placeholder=\"Feet\"\r\n          autoComplete=\"off\"\r\n          value={heightFeet}\r\n          onChange={handleBmi}\r\n          aria-label=\"feet\"\r\n        />\r\n        { /*height in inches*/ }\r\n        <Form.Control\r\n          id=\"height-inches\"\r\n          type=\"number\"\r\n          name=\"heightInches\"\r\n          placeholder=\"Inches\"\r\n          autoComplete=\"off\"\r\n          value={heightInches}\r\n          onChange={handleBmi}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Height;","import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Weight extends Component {\r\n  render() {\r\n    const { weightPounds, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        { /*weight in pounds*/ }\r\n        <Form.Label\r\n          htmlFor=\"weight-lbs\"\r\n          tabIndex=\"0\">\r\n            Weight\r\n        </Form.Label>\r\n        <Form.Control\r\n          id=\"weight-lbs\"\r\n          type=\"number\"\r\n          name=\"weightPounds\"\r\n          placeholder=\"Pounds\"\r\n          autoComplete=\"off\"\r\n          value={weightPounds}\r\n          onChange={handleBmi}\r\n          aria-label=\"pounds\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weight;","import React, { Component } from 'react';\r\n\r\nclass UserResults extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    function showStrBmi() {\r\n      if (getBmi === \"\") {\r\n        return 'Please Enter Your Info';\r\n      } else if (getBmi < 18.5) {\r\n        return 'You are underweight.';\r\n      } else if (getBmi >= 18.5 && getBmi <= 24.9) {\r\n        return 'You are healthy!';\r\n      } else if (getBmi >= 25 && getBmi <= 29.9) {\r\n        return 'You are overweight.';\r\n      } else if (getBmi >= 30) {\r\n       return 'You are obese.';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"bmi-str-box\" tabIndex=\"0\">\r\n         <p className=\"bmi-str\">\r\n           { showStrBmi() }\r\n         </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserResults;","import React, { Component } from 'react';\r\n\r\nclass BmiNumber extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"bmi-number-box\"\r\n        tabIndex=\"0\"\r\n        aria-label=\"bmi number\">\r\n          <div\r\n            className=\"bmi-number\"\r\n            tabIndex=\"0\">\r\n              { getBmi }\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiNumber;","import React, { Component } from 'react';\r\nimport {\r\n  Button\r\n} from 'react-bootstrap';\r\n\r\nclass BmiButton extends Component {\r\n  handleResults = () => {\r\n    this.props.handleResults();\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds } = this.props;\r\n    const disabled = (!heightFeet || !heightInches || !weightPounds ? true : false);\r\n\r\n    return (\r\n      <Button\r\n        onClick={this.handleResults}\r\n        className=\"results-btn\"\r\n        disabled={disabled}\r\n        size=\"lg\">\r\n          <span\r\n            className=\"results-text\"\r\n            tabIndex=\"0\">\r\n              Calculate\r\n          </span>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiButton;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"author-ftr\">\r\n        <p\r\n          className=\"author\"\r\n          tabIndex=\"0\">\r\n            Â© JENNIFER NGUYEN\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Height from './components/Height';\r\nimport Weight from './components/Weight';\r\nimport UserResults from './components/UserResults';\r\nimport BmiNumber from './components/BmiNumber';\r\nimport BmiButton from './components/BmiButton';\r\nimport Footer from './components/Footer';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      heightFeet: \"\",\r\n      heightInches: \"\",\r\n      weightPounds: \"\",\r\n      results: \"\"\r\n    }\r\n    this.handleBmi = this.handleBmi.bind(this);\r\n    this.handleResults = this.handleResults.bind(this);\r\n  }\r\n\r\n  handleBmi = e => {\r\n    e.preventDefault();\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleResults = e => {\r\n    const { heightFeet, heightInches, weightPounds } = this.state;\r\n    const numHeightFeet = Number(heightFeet);\r\n    const numHeightInches = Number(heightInches);\r\n    const numWeightPounds = Number(weightPounds);\r\n    const addAllHeight = ((numHeightFeet * 12) + numHeightInches);\r\n    //total height in meters\r\n    const totalHeight = Math.pow((addAllHeight) * 0.0254, 2);\r\n    //total weight in kg\r\n    const totalWeight = (numWeightPounds * 0.45);\r\n    //total bmi\r\n    const totalBMI = (totalWeight/totalHeight).toFixed(1);\r\n    this.setState({\r\n      results: totalBMI\r\n    });\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.handleResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds, results } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p\r\n          className=\"bmi-title\"\r\n          tabIndex=\"0\"\r\n          aria-label=\"title\">\r\n            BMI Calculator\r\n        </p>\r\n        <div className=\"bmi-box\">\r\n          <UserResults getBmi={results} />\r\n          <BmiNumber getBmi ={results} />\r\n          <Form\r\n            onSubmit={this.handleBmi}\r\n            onKeyDown={this.handleKeyDown}\r\n            tabIndex=\"0\"\r\n            aria-label=\"form\">\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*height in feet and inches*/ }\r\n                <Height\r\n                  heightFeet={heightFeet}\r\n                  heightInches={heightInches}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*weight in pounds*/ }\r\n                <Weight\r\n                  weightPounds={weightPounds}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <BmiButton\r\n                heightFeet={heightFeet}\r\n                heightInches={heightInches}\r\n                weightPounds={weightPounds}\r\n                handleResults={this.handleResults}\r\n              />\r\n          </Form>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/index.css';\r\nimport './css/responsive.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}