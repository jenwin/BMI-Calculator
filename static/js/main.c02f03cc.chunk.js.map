{"version":3,"sources":["components/Height.js","components/Weight.js","components/UserResults.js","components/BmiNumber.js","components/BmiButton.js","components/Footer.js","App.js","index.js"],"names":["Height","Component","render","heightFeet","heightInches","handleBmi","this","props","_jsxs","children","_jsx","Form","Label","htmlFor","tabIndex","Control","id","type","name","placeholder","autoComplete","value","onChange","Weight","weightPounds","UserResults","getBmi","className","BmiNumber","BmiButton","constructor","arguments","handleResults","disabled","Button","onClick","size","Footer","App","super","e","preventDefault","target","setState","state","addAllHeight","Number","totalBMI","Math","pow","toFixed","results","handleKeyDown","keyCode","bind","onSubmit","onKeyDown","Group","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.c02f03cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Height extends Component {\r\n  render() {\r\n    const { heightFeet, heightInches, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Form.Label\r\n          htmlFor=\"height-feet\"\r\n          tabIndex=\"0\">\r\n            Height\r\n        </Form.Label>\r\n        { /*height in feet*/ }\r\n        <Form.Control\r\n          id=\"height-feet\"\r\n          type=\"number\"\r\n          name=\"heightFeet\"\r\n          placeholder=\"Feet\"\r\n          autoComplete=\"off\"\r\n          value={heightFeet}\r\n          onChange={handleBmi}\r\n          aria-label=\"feet\"\r\n        />\r\n        { /*height in inches*/ }\r\n        <Form.Control\r\n          id=\"height-inches\"\r\n          type=\"number\"\r\n          name=\"heightInches\"\r\n          placeholder=\"Inches\"\r\n          autoComplete=\"off\"\r\n          value={heightInches}\r\n          onChange={handleBmi}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Height;","import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Weight extends Component {\r\n  render() {\r\n    const { weightPounds, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        { /*weight in pounds*/ }\r\n        <Form.Label\r\n          htmlFor=\"weight-lbs\"\r\n          tabIndex=\"0\">\r\n            Weight\r\n        </Form.Label>\r\n        <Form.Control\r\n          id=\"weight-lbs\"\r\n          type=\"number\"\r\n          name=\"weightPounds\"\r\n          placeholder=\"Pounds\"\r\n          autoComplete=\"off\"\r\n          value={weightPounds}\r\n          onChange={handleBmi}\r\n          aria-label=\"pounds\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weight;","import React, { Component } from 'react';\r\n\r\nclass UserResults extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    function showStrBmi() {\r\n      if (getBmi === \"\") {\r\n        return 'Please Enter Your Info';\r\n      } else if (getBmi < 18.5) {\r\n        return 'You are underweight.';\r\n      } else if (getBmi >= 18.5 && getBmi <= 24.9) {\r\n        return 'You are healthy!';\r\n      } else if (getBmi >= 25 && getBmi <= 29.9) {\r\n        return 'You are overweight.';\r\n      } else if (getBmi >= 30) {\r\n       return 'You are obese.';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"bmi-str-box\" tabIndex=\"0\">\r\n         <p className=\"bmi-str\">\r\n           { showStrBmi() }\r\n         </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserResults;","import React, { Component } from 'react';\r\n\r\nclass BmiNumber extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"bmi-number-box\"\r\n        tabIndex=\"0\"\r\n        aria-label=\"bmi number\">\r\n          <div\r\n            className=\"bmi-number\"\r\n            tabIndex=\"0\">\r\n              { getBmi }\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiNumber;","import React, { Component } from 'react';\r\nimport {\r\n  Button\r\n} from 'react-bootstrap';\r\n\r\nclass BmiButton extends Component {\r\n  handleResults = () => {\r\n    this.props.handleResults();\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds } = this.props;\r\n    const disabled = (!heightFeet || !heightInches || !weightPounds ? true : false);\r\n\r\n    return (\r\n      <Button\r\n        onClick={this.handleResults}\r\n        className=\"results-btn\"\r\n        disabled={disabled}\r\n        size=\"lg\">\r\n          <span\r\n            className=\"results-text\"\r\n            tabIndex=\"0\">\r\n              Calculate\r\n          </span>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiButton;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"author-ftr\">\r\n        <p\r\n          className=\"author\"\r\n          tabIndex=\"0\">\r\n            Â© JENNIFER NGUYEN\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Height from './components/Height';\r\nimport Weight from './components/Weight';\r\nimport UserResults from './components/UserResults';\r\nimport BmiNumber from './components/BmiNumber';\r\nimport BmiButton from './components/BmiButton';\r\nimport Footer from './components/Footer';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      heightFeet: \"\",\r\n      heightInches: \"\",\r\n      weightPounds: \"\",\r\n      results: \"\"\r\n    }\r\n    this.handleBmi = this.handleBmi.bind(this);\r\n    this.handleResults = this.handleResults.bind(this);\r\n  }\r\n\r\n  handleBmi = e => {\r\n    e.preventDefault();\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleResults = e => {\r\n    const { heightFeet, heightInches, weightPounds } = this.state;\r\n    const numHeightFeet = Number(heightFeet);\r\n    const numHeightInches = Number(heightInches);\r\n    const numWeightPounds = Number(weightPounds);\r\n    const addAllHeight = ((numHeightFeet * 12) + numHeightInches);\r\n    //total height in meters\r\n    const totalHeight = Math.pow((addAllHeight) * 0.0254, 2);\r\n    //total weight in kg\r\n    const totalWeight = (numWeightPounds * 0.45);\r\n    //total bmi\r\n    const totalBMI = (totalWeight/totalHeight).toFixed(1);\r\n    this.setState({\r\n      results: totalBMI\r\n    });\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.handleResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds, results } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p\r\n          className=\"bmi-title\"\r\n          tabIndex=\"0\"\r\n          aria-label=\"title\">\r\n            BMI Calculator\r\n        </p>\r\n        <div className=\"bmi-box\">\r\n          <UserResults getBmi={results} />\r\n          <BmiNumber getBmi ={results} />\r\n          <Form\r\n            onSubmit={this.handleBmi}\r\n            onKeyDown={this.handleKeyDown}\r\n            tabIndex=\"0\"\r\n            aria-label=\"form\">\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*height in feet and inches*/ }\r\n                <Height\r\n                  heightFeet={heightFeet}\r\n                  heightInches={heightInches}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*weight in pounds*/ }\r\n                <Weight\r\n                  weightPounds={weightPounds}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <BmiButton\r\n                heightFeet={heightFeet}\r\n                heightInches={heightInches}\r\n                weightPounds={weightPounds}\r\n                handleResults={this.handleResults}\r\n              />\r\n          </Form>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/index.css';\r\nimport './css/responsive.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}